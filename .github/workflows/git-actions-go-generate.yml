name: Go Generate
on:
  workflow_dispatch:
    inputs:
      source_url:
        type: string
        description: "URL of the source for this workflow run"
      source_author:
        type: string
        description: "Username of the source for this workflow run"

env:
  INPUT_SOURCE_URL: ${{ github.event.inputs.source_url }}
  INPUT_SOURCE_AUTHOR: ${{ github.event.inputs.source_author }}

permissions:
  contents: write
  pull-requests: write
jobs:
  go-generate:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - name: Run go-generate to fetch data.json
        run: make go-generate
      - name: Check for repository changes
        run: |
          if git diff --name-only --exit-code; then
            echo "No changes found in repository after 'go generate'"
            echo "changes_exist=false" >> $GITHUB_ENV
          else
            echo "Changes found in repository after 'go generate':"
            git diff --name-only
            echo "changes_exist=true" >> $GITHUB_ENV
          fi
      - name: Create branch, commit and push
        if: ${{ env.changes_exist == 'true' }}
        id: branch
        run: |
          BRANCH="githubaction-go-generate-$(date +%Y-%m-%d-%H-%M-%S)"
          echo "::set-output name=branch::$BRANCH"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git checkout -b "$BRANCH"
          git commit -a -m 'go generate'
          git push origin "$BRANCH"
      - name: Create Pull Request
        if: ${{ env.changes_exist == 'true' }}
        id: cpr
        env:
          SOURCE_BRANCH: ${{ steps.branch.outputs.branch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_TITLE="[${GITHUB_BASE_REF}] go generate"
          PR_BODY="$(echo -e Auto-generated by GitHub Actions, source author: @${INPUT_SOURCE_AUTHOR}\\n)"
          CREATED_PR=$(gh pr create --title "${PR_TITLE}" --body "${PR_BODY}" --label "status/auto-created" --base "${GITHUB_REF_NAME}" --head "${SOURCE_BRANCH}")
          echo "Created pull request: ${CREATED_PR}" >> $GITHUB_STEP_SUMMARY
          EXISTING_PRS=$(gh pr list --limit 1500 --json title,url | jq --arg title "${PR_TITLE}" -r '.[] | select(.title==$title) | .url')
          if [ -n "${EXISTING_PRS}" ]; then
            for EXISTING_PR IN $EXISTING_PRS; do
              gh pr close "${EXISTING_PR}" -c "Superseded by ${CREATED_PR}" -d
              echo "Closed ${EXISTING_PR} as superseded by ${CREATED_PR}" >> $GITHUB_STEP_SUMMARY
            done
          fi
